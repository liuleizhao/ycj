<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.system.dao.RoleDao" >
  <resultMap id="BaseResultMap" type="com.cs.system.entity.Role" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="DECIMAL" />
    <result column="PARENT_ID" property="parentId" jdbcType="DECIMAL" />
    <result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, CREATOR, DESCRIPTION, NAME, ORDER_NUMBER, PARENT_ID, CREATED_DATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from C_ROLE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from C_ROLE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cs.system.entity.Role" >
  	<selectKey keyProperty="id" resultType="String" order="BEFORE">  
       select sys_guid() from dual
    </selectKey> 
    insert into C_ROLE (ID, CREATOR, DESCRIPTION, 
      NAME, ORDER_NUMBER, PARENT_ID, 
      CREATED_DATE)
    values (#{id,jdbcType=VARCHAR}, #{creator,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{orderNumber,jdbcType=DECIMAL}, #{parentId,jdbcType=DECIMAL}, 
      #{createdDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.cs.system.entity.Role" >
    insert into C_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="orderNumber != null" >
        ORDER_NUMBER,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="createdDate != null" >
        CREATED_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=DECIMAL},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.system.entity.Role" >
    update C_ROLE
    <set >
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null" >
        ORDER_NUMBER = #{orderNumber,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=DECIMAL},
      </if>
      <if test="createdDate != null" >
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cs.system.entity.Role" >
    update C_ROLE
    set CREATOR = #{creator,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      ORDER_NUMBER = #{orderNumber,jdbcType=DECIMAL},
      PARENT_ID = #{parentId,jdbcType=DECIMAL},
      CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
   <!-- 自定义 -->
  <sql id="conditions" >
  	<where>
  	 <foreach collection="sqlCriterions" item="criterionItem" separator="and" >
  	 	<choose>
  	 		<when test="criterionItem.noValue">
  	 			${criterionItem.condition}
  	 		</when>
  	 		<when test="criterionItem.singleValue">
  	 			${criterionItem.condition} #{criterionItem.value}
  	 		</when>
  	 		<when test="criterionItem.betweenValue">
  	 			${criterionItem.condition} #{criterionItem.value} and #{criterionItem.secondValue}
  	 		</when>
  	 		<when test="criterionItem.listValue">
  	 			 ${criterionItem.condition}
                  <foreach collection="criterionItem.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
  	 		</when>
  	 	</choose>
      </foreach>
  	</where>
  </sql>

  <select id="findAllData" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from C_ROLE
  </select>
  
  <select id="findByCondition" parameterType="com.cs.mvc.dao.SqlCondition" resultMap="BaseResultMap">
	select 
	<if test="distinct" >
      distinct
    </if>
	<include refid="Base_Column_List" />
	  from C_ROLE
	<if test="_parameter != null" >
      <include refid="conditions" />
    </if>
    <if test="orderbyClause != null and orderby" >
    	order by
    <foreach collection="orderbyClause" item="listItem" separator=",">
      	 ${listItem}
    </foreach>
    </if>
  </select>
  
  <select id="countByCondition" parameterType="com.cs.mvc.dao.SqlCondition" resultType="java.lang.Integer">
   	select count(*) from C_ROLE
    <if test="_parameter != null" >
      <include refid="conditions" />
    </if>
  </select>
  
  <!--   超级管理员查看角色列表sql -->
  <select id="findRoleByAdmin" parameterType="com.cs.mvc.dao.SqlCondition" resultMap="BaseResultMap">
    select t.ID,
       t.CREATED_DATE,
       t.CREATOR,
       t.DESCRIPTION,
       t.NAME,
       t.ORDER_NUM,
       t.PARENT_ID,
       t3.count
       from C_ROLE t
        left join (select t2.role_id, count(0) as count
              from C_USER_ROLE_RELATION t2
              group by t2.role_id) t3
              on t.id=t3.role_id
    <if test="_parameter != null" >
      <include refid="conditions" />
    </if>
    <if test="orderbyClause != null and orderby" >
    	order by
    <foreach collection="orderbyClause" item="listItem" separator=",">
      	 ${listItem}
    </foreach>
    </if>
  </select>
  <select id="findRoleByUserId" parameterType="string" resultMap="BaseResultMap">
  	 select r.* from C_ROLE r where r.id in 
 	(select rur.role_id from C_USER_ROLE_RELATION rur where rur.user_id = #{userId} and  rur.authorize_Type = 1)
  </select>
  
</mapper>