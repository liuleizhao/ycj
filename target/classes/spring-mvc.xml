<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">
	
	<!-- 使用Annotation自动注册Bean,只扫描@Controller 同时需要排除扫描Service，否则事务控制失效 -->
	<context:component-scan base-package="com.cs">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />  
	</context:component-scan>
    
	<!-- 默认的注解映射的支持，org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="true">
			<!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
		    	<constructor-arg value="UTF-8" />
			</bean>
			<!-- Jackson2HttpMessageConverter的默认格式化输出 -->
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                	<list>
                		<value>application/json;charset=UTF-8</value>
                	</list>
                </property>
            </bean>
            <!-- 使用XML格式输出数据 -->
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		        <constructor-arg>
		        	<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
				        <property name="streamDriver">
				            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
				        </property>
				    </bean>
		        </constructor-arg>
		        <property name="supportedMediaTypes" value="application/xml"></property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
    <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
	    <property name="mediaTypes" >
	        <map> 
                <entry key="xml" value="application/xml"/> 
                <entry key="json" value="application/json"/> 
            </map>
	    </property>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
	</bean>
	
	<!-- 视图解释类 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" /><!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑 -->
	</bean>
	
	<!-- 静态资源映射 (通过spring进行缓存)-->
    <mvc:resources mapping="/static/**" location="/static/" cache-period="31536000"/>
	
	<!-- 定义无Controller重定向 ：返回404页面 -->
	<mvc:view-controller path="/" view-name="/error/404"/>
	
	
	
	<!-- 拦截器配置，拦截顺序：pre方法顺序、post方法和after方法倒序。-->
	<mvc:interceptors>
		<!-- IP访问拦截器 -->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.cs.mvc.interceptor.IPInterceptor" />
		</mvc:interceptor> -->
		<!-- 后台登陆拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/backend/**" />
			<mvc:exclude-mapping path="/backend/login"/><!-- 无需拦截的URL -->
			<bean class="com.cs.mvc.interceptor.BackendPermissionInterceptor" />
		</mvc:interceptor>
		<!-- 微信拦截器 -->
		<mvc:interceptor>
			<mvc:mapping path="/wx/**" />
			<mvc:exclude-mapping path="/wx/login"/><!-- 无需拦截的URL -->
			<bean class="com.cs.mvc.interceptor.WxPermissionInterceptor" />
		</mvc:interceptor>
		<!-- 日志拦截器 -->
		<!-- <mvc:interceptor>
			<mvc:mapping path="/backend/**" />
			<bean class="com.cs.mvc.interceptor.LogInterceptor" />
		</mvc:interceptor> -->
		
	</mvc:interceptors>
	
	<!-- 定义异常重定向:返回 500页面  -->
	<bean id="exceptionHandler" class="com.cs.mvc.interceptor.ExceptionResolver" />
	<!-- 上传文件拦截，设置最大上传文件大小 -->  
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<property name="maxUploadSize" value="10485760" />  <!--允许上传的最大文件大小,按字节 10M=10*1024*1024(B)=10485760 bytes -->
		<property name="maxInMemorySize" value="4096" /> <!-- 文件上传时允许写到内存中的最大值  ,默认 10KB=10*1024(B),现设为4KB,超过4KB将生成临时文件-->
	</bean>
	
</beans>