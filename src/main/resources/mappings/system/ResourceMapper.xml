<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cs.system.dao.ResourceDao" >
  <resultMap id="BaseResultMap" type="com.cs.system.entity.Resource" >
    <id column="ID" property="id" jdbcType="VARCHAR" />
    <result column="CREATED_DATE" property="createdDate" jdbcType="TIMESTAMP" />
    <result column="CREATOR" property="creator" jdbcType="VARCHAR" />
    <result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="ORDER_NUMBER" property="orderNumber" jdbcType="DECIMAL" />
    <result column="PATH" property="path" jdbcType="VARCHAR" />
    <result column="RESOURCE_TYPE" property="resourceType" jdbcType="DECIMAL" />
    <result column="PARENT_ID" property="parentId" jdbcType="VARCHAR" />
    <result column="ICON" property="icon" jdbcType="VARCHAR" />
    <result column="METHOD_TYPE" property="methodType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, CREATED_DATE, CREATOR, DESCRIPTION, NAME, ORDER_NUMBER, PATH, RESOURCE_TYPE, 
    PARENT_ID, ICON, METHOD_TYPE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from C_RESOURCE
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from C_RESOURCE
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cs.system.entity.Resource" >
  	<selectKey keyProperty="id" resultType="String" order="BEFORE">  
       select sys_guid() from dual
    </selectKey> 
    insert into C_RESOURCE (ID, CREATED_DATE, CREATOR, 
      DESCRIPTION, NAME, ORDER_NUMBER, 
      PATH, RESOURCE_TYPE, PARENT_ID, 
      ICON, METHOD_TYPE)
    values (#{id,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{creator,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{orderNumber,jdbcType=DECIMAL}, 
      #{path,jdbcType=VARCHAR}, #{resourceType,jdbcType=DECIMAL}, #{parentId,jdbcType=VARCHAR}, 
      #{icon,jdbcType=VARCHAR}, #{methodType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cs.system.entity.Resource" >
    insert into C_RESOURCE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="createdDate != null" >
        CREATED_DATE,
      </if>
      <if test="creator != null" >
        CREATOR,
      </if>
      <if test="description != null" >
        DESCRIPTION,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="orderNumber != null" >
        ORDER_NUMBER,
      </if>
      <if test="path != null" >
        PATH,
      </if>
      <if test="resourceType != null" >
        RESOURCE_TYPE,
      </if>
      <if test="parentId != null" >
        PARENT_ID,
      </if>
      <if test="icon != null" >
        ICON,
      </if>
      <if test="methodType != null" >
        METHOD_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="createdDate != null" >
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=DECIMAL},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        #{resourceType,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="methodType != null" >
        #{methodType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cs.system.entity.Resource" >
    update C_RESOURCE
    <set >
      <if test="createdDate != null" >
        CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="creator != null" >
        CREATOR = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orderNumber != null" >
        ORDER_NUMBER = #{orderNumber,jdbcType=DECIMAL},
      </if>
      <if test="path != null" >
        PATH = #{path,jdbcType=VARCHAR},
      </if>
      <if test="resourceType != null" >
        RESOURCE_TYPE = #{resourceType,jdbcType=DECIMAL},
      </if>
      <if test="parentId != null" >
        PARENT_ID = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        ICON = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="methodType != null" >
        METHOD_TYPE = #{methodType,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cs.system.entity.Resource" >
    update C_RESOURCE
    set CREATED_DATE = #{createdDate,jdbcType=TIMESTAMP},
      CREATOR = #{creator,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      ORDER_NUMBER = #{orderNumber,jdbcType=DECIMAL},
      PATH = #{path,jdbcType=VARCHAR},
      RESOURCE_TYPE = #{resourceType,jdbcType=DECIMAL},
      PARENT_ID = #{parentId,jdbcType=VARCHAR},
      ICON = #{icon,jdbcType=VARCHAR},
      METHOD_TYPE = #{methodType,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  
   <!-- 自定义 -->
  <sql id="conditions" >
  	<where>
  	 <foreach collection="sqlCriterions" item="criterionItem" separator="and" >
  	 	<choose>
  	 		<when test="criterionItem.noValue">
  	 			${criterionItem.condition}
  	 		</when>
  	 		<when test="criterionItem.singleValue">
  	 			${criterionItem.condition} #{criterionItem.value}
  	 		</when>
  	 		<when test="criterionItem.betweenValue">
  	 			${criterionItem.condition} #{criterionItem.value} and #{criterionItem.secondValue}
  	 		</when>
  	 		<when test="criterionItem.listValue">
  	 			 ${criterionItem.condition}
                  <foreach collection="criterionItem.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
  	 		</when>
  	 	</choose>
      </foreach>
  	</where>
  </sql>

  <select id="findAllData" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from C_RESOURCE
  </select>
  
  <select id="findByCondition" parameterType="com.cs.mvc.dao.SqlCondition" resultMap="BaseResultMap">
	select 
	<if test="distinct" >
      distinct
    </if>
	<include refid="Base_Column_List" />
	  from C_RESOURCE
	<if test="_parameter != null" >
      <include refid="conditions" />
    </if>
    <if test="orderbyClause != null and orderby" >
    	order by
    <foreach collection="orderbyClause" item="listItem" separator=",">
      	 ${listItem}
    </foreach>
    </if>
  </select>
  
  <select id="countByCondition" parameterType="com.cs.mvc.dao.SqlCondition" resultType="java.lang.Integer">
   	select count(*) from C_RESOURCE
    <if test="_parameter != null" >
      <include refid="conditions" />
    </if>
  </select>
  
   
  <!-- 根据角色Id连表查询当前角色拥有的权限（即资源） -->
  <select id="findResourceByRoleId" parameterType="string" resultMap="BaseResultMap">
  	 select r.*  from C_RESOURCE r left JOIN C_ROLE_RESOURCE_RELATION  rr 
  	 on  r.id=rr.resource_id  where role_id=#{roleId} and rr.authorize_type = 1
  </select>
  
  <!-- 根据条件查询资源列表，用于封装Tree -->
  <select id="findResourceBy" parameterType="java.util.Map"  resultMap="BaseResultMap">
  	select 
      distinct re.id,re.*
  	   from C_RESOURCE re JOIN C_ROLE_RESOURCE_RELATION rr 
  	 	ON re."ID" = rr.RESOURCE_ID
		AND rr.AUTHORIZE_TYPE = #{authorizeType}
  	 <if test="resourceType != null">
		AND  re.RESOURCE_TYPE = #{resourceType}
	</if>
	<if test="parentId != null">
		<if test="parentId == ''">
			AND re.PARENT_ID is null
		</if>
		<if test="parentId != ''">
		AND re.PARENT_ID = #{parentId}
		</if>
	</if>
 	JOIN C_USER_ROLE_RELATION ur ON ur.AUTHORIZE_TYPE = #{authorizeType}
 		AND ur.user_id = #{userId}
		AND rr.ROLE_id = ur.ROLE_id
 	order by re.ORDER_NUMBER asc
  </select>
  
    <!-- 根据条件查询资源列表，用于封装Tree -->
  <select id="findAdminResourceBy" parameterType="java.util.Map"  resultMap="BaseResultMap">
  	select 
      <include refid="Base_Column_List" />
  	   from C_RESOURCE 
  	   <where>
	  	   <if test="resourceType != null">
			 RESOURCE_TYPE = #{resourceType}
			</if>
			<if test="parentId != null">
				<if test="parentId == ''">
					AND PARENT_ID is null
				</if>
				<if test="parentId != ''">
					AND PARENT_ID = #{parentId}
				</if>
			</if>
  	   </where>
		
		
 		order by ORDER_NUMBER asc
  </select>
  
</mapper>